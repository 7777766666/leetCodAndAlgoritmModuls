//package org.example.TinkOff;
//
////import java.util.*;
////import java.lang.*;
////import org.json.JSONObject;
////import org.json.JSONArray;
////import java.time.ZonedDateTime;
////import java.time.format.DateTimeFormatter;
////
////class PriorityDelivery100
////{
////    public static void main(String args[])
////    {
////        Scanner scanner = new Scanner(System.in);
////        String json = scanner.nextLine(); // {"products": [...]}
////
////        // Parse input JSON
////        JSONObject input = new JSONObject(json);
////        JSONArray products = input.getJSONArray("products");
////
////        // Sort products by meetingTime in ascending order
////        List<JSONObject> sortedProducts = new ArrayList<>();
////        for (int i = 0; i < products.length(); i++) {
////            sortedProducts.add(products.getJSONObject(i));
////        }
////        Collections.sort(sortedProducts, new Comparator<JSONObject>() {
////            @Override
////            public int compare(JSONObject p1, JSONObject p2) {
////                ZonedDateTime t1 = ZonedDateTime.parse(p1.getString("meetingTime"));
////                ZonedDateTime t2 = ZonedDateTime.parse(p2.getString("meetingTime"));
////                return t1.compareTo(t2);
////            }
////        });
////
////        // Aggregate products into meetings
////        List<JSONObject> meetings = new ArrayList<>();
////        for (JSONObject product : sortedProducts) {
////            String clientId = product.getString("clientId");
////            String addressId = product.getString("addressId");
////            ZonedDateTime meetingTime = ZonedDateTime.parse(product.getString("meetingTime"));
////            JSONObject meeting = null;
////            for (JSONObject m : meetings) {
////                if (m.getString("clientId").equals(clientId) && m.getString("addressId").equals(addressId)) {
////                    meeting = m;
////                    break;
////                }
////            }
////            if (meeting == null) {
////                meeting = new JSONObject();
////                meeting.put("clientId", clientId);
////                meeting.put("addressId", addressId);
////                meeting.put("meetingTime", meetingTime.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME));
////                meeting.put("products", new JSONArray());
////                meetings.add(meeting);
////            }
////            JSONArray meetingProducts = meeting.getJSONArray("products");
////            JSONObject productCopy = new JSONObject();
////            productCopy.put("id", product.getString("id"));
////            productCopy.put("type", product.getString("type"));
////            productCopy.put("creationTime", product.getString("creationTime"));
////            meetingProducts.put(productCopy);
////        }
////
////        // Format and print output JSON
////        JSONObject output = new JSONObject();
////        output.put("meetings", new JSONArray(meetings));
////        System.out.println(output.toString(2));
////    }
////}
//
//
//
////class PriorityDelivery
////{
////    public static void main(String args[])
////    {
////        Scanner scanner = new Scanner(System.in);
////        String json = scanner.nextLine(); // {"products": [...]}
////        //
////        // products -> meetings processing
////        //
////        System.out.println("result here"); // {"meetings": [...]}
////    }
////}
//
//
//    –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ üí≥
//        –° –¥–æ—Å—Ç–∞–≤–∫–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ –º–µ–∂–¥—É –±–∞–Ω–∫–æ–º –∏ –∫–ª–∏–µ–Ω—Ç–æ–º. –í–∞–∂–Ω—ã–º —ç—Ç–∞–ø–æ–º –ø—Ä–∏ —ç—Ç–æ–º —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–æ—Ä–∏—Ç–µ–∑–∞—Ü–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–æ–∫.
//
//        –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
//
//        –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ (System.in) —Å—Ç—Ä–æ–∫—É - JSON –º–∞—Å—Å–∏–≤ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤;
//        –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (System.out) –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å—Ç—Ä–µ—á - JSON –º–∞—Å—Å–∏–≤;
//        –í –∫–∞—á–µ—Å—Ç–≤–µ JSON-–ø–∞—Ä—Å–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ (—É–∂–µ –µ—Å—Ç—å –≤ classpath).
//        –¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏
//
//        –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑ –≤—Ö–æ–¥–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö –∫ –≤—ã–¥–∞—á–µ, —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å—Ç—Ä–µ—á —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.
//
//        –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (System.in):
//
//        {
//        "products": [
//        {
//        "id": "68fe1976-473f-4e8a-b162-851d1c8b2e27",
//        "clientId": "401559ed-b24f-4847-aeb1-d49e6f00db9d",
//        "addressId": "da0abd02-a0ae-4620-bcd4-84344aa59d5d",
//        "type": "Junior Debit",
//        "creationTime": "2023-04-06T05:26:43.968+03:00",
//        "meetingTime": "2023-04-05T13:55:24.968+03:00"
//        }
//        ]
//        }
//        –≤ –ø—Ä–∏–º–µ—Ä–µ —Å—Ç—Ä–æ–∫–∞ –≤—Ö–æ–¥–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∞ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏. –í —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–∞—Ä–µ—Ç–∫–∏ –Ω–µ –±—É–¥–µ—Ç, json —Ü–µ–ª–∏–∫–æ–º –±—É–¥–µ—Ç –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:
//
//        {"products": [{"id": "68fe1976-473f-4e8a-b162-851d1c8b2e27","clientId": "401559ed-b24f-4847-aeb1-d49e6f00db9d","addressId": "da0abd02-a0ae-4620-bcd4-84344aa59d5d","type": "Junior Debit","creationTime": "2023-04-06T05:26:43.968+03:00","meetingTime": "2023-04-05T13:55:24.968+03:00" }]}
//        –ü—Ä–æ–¥—É–∫—Ç: –ø—Ä–∏–≤–µ–∑—É—Ç –æ—Ç –¥–µ–±–µ—Ç–æ–≤–æ–π –∫–∞—Ä—Ç—ã –¥–æ –∏–ø–æ—Ç–µ–∫–∏.
//
//        –°–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∞:
//
//        –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –≤ JSON
//
//        –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞
//
//        –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
//
//        id
//
//        –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞
//
//        UUID, NOT NULL
//
//        type
//
//        —Ç–∏–ø –ø—Ä–æ–¥—É–∫—Ç–∞
//
//        string, NOT NULL
//
//        meetingTime
//
//        –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∞. –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤—Å—Ç—Ä–µ—á
//
//        ISO, —Å–æ —Å–º–µ—â–µ–Ω–∏–µ–º (—Å–º. –ø—Ä–∏–º–µ—Ä),
//        NOT NULL
//
//        clientId
//
//        —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//
//        UUID, NOT NULL
//
//        addressId
//
//        —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//
//        UUID, NOT NULL
//
//        creationTime
//
//        –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
//
//        ISO, —Å–æ —Å–º–µ—â–µ–Ω–∏–µ–º (—Å–º. –ø—Ä–∏–º–µ—Ä),
//        NOT NULL
//
//        –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∞ –≤—Å—Ç—Ä–µ—á (System.out):
//
//        {
//        "meetings": [
//        {
//        "meetingTime": "2023-04-05T09:54:01.968+03:00",
//        "clientId": "401559ed-b24f-4847-aeb1-d49e6f00db9d",
//        "addressId": "e41362a9-eabd-4875-af71-71c3e43c5cd6",
//        "products": [
//        {
//        "creationTime": "2023-04-06T05:14:19.968+03:00",
//        "id": "a78159d1-bfbc-4f76-946b-c216d903508e",
//        "type": "Black Debit"
//        }
//        ]
//        }
//        ]
//        }
//        –ü–æ—Ä—è–¥–æ–∫ –ø–æ–ª–µ–π –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ JSON –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∞ –Ω–µ –≤–∞–∂–µ–Ω;
//        –í –≤—ã—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON (—Å —Å–∏–º–≤–æ–ª–æ–º –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–∞—Ä–µ—Ç–∫–∏).
//        –í—Å—Ç—Ä–µ—á–∞ - –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ (-–æ–≤). –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∑–∞ –æ–¥–Ω—É –≤—Å—Ç—Ä–µ—á—É.
//
//        –°–≤–æ–π—Å—Ç–≤–∞ –≤—Å—Ç—Ä–µ—á–∏:
//
//        –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –≤ JSON
//
//        –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞
//
//        –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
//
//        meetingTime
//
//        –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏. –ë–ª–∏–∂–∞–π—à–µ–µ –∏–∑ meetingTime –≥–æ—Ç–æ–≤—ã—Ö –∫ –≤—ã–¥–∞—á–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
//
//        ISO, —Å–æ —Å–º–µ—â–µ–Ω–∏–µ–º (—Å–º. –ø—Ä–∏–º–µ—Ä),
//        NOT NULL
//
//        clientId
//
//        —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//
//        UUID, NOT NULL
//
//        addressId
//
//        —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//
//        UUID, NOT NULL
//
//        products
//
//        —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –§–æ—Ä–º–∞—Ç –ø—Ä–æ–¥—É–∫—Ç–∞:
//        { "id": "...", "type": "...", "creationTime": "..." }
//
//        —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ–ª–µ–π –∏–∑ –≤—Ö–æ–¥–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
//
//        –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, NOT NULL
//
//        –ü—Ä–∞–≤–∏–ª–∞ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ –≤—Å—Ç—Ä–µ—á:
//
//        –í—Å—Ç—Ä–µ—á–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –¥–∞—Ç–µ meetingTime (ASC). –í—Å—Ç—Ä–µ—á–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º meetingTime –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –ø–æ clientId (–ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫ –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ (ASC)). –í—Å—Ç—Ä–µ—á–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ meetingTime –∏ clientId –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –ø–æ addressId (–ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫ –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ (ASC)).
//        –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —É –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ (–ø–æ–¥ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º clientId) –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–µ–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –æ–¥–∏–Ω –∞–¥—Ä–µ—Å (addressId), –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤—Å—Ç—Ä–µ—á—É —Å –±–ª–∏–∂–∞–π—à–∏–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º (—Å–º. meetingTime) –∏ –æ–±—â–∏–º–∏ clientId –∏ addressId.
//        –ü—Ä–æ–¥—É–∫—Ç—ã –≤–æ –≤—Å—Ç—Ä–µ—á–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –¥–∞—Ç–µ –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è creationTime (ASC). –ü—Ä–æ–¥—É–∫—Ç—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º creationTime –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –ø–æ id (–ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫ –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ (ASC)).
//        –í—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ ISO: "2023-04-06T05:26:43.968+03:00".
//        –ü—Ä–∏–º–µ—Ä
//
//        –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
//
//        {
//        "products": [
//        {
//        "id": "5d538f86-c70a-11ed-afa1-0242ac120002",
//        "type": "Black Debit",
//        "meetingTime": "2023-03-15T18:00:00+03:00",
//        "addressId": "e41362a9-eabd-4875-af71-71c3e43c5cd6",
//        "clientId": "dc86186e-c6e7-11ed-afa1-0242ac120002",
//        "creationTime": "2023-03-14T10:00:00.145+03:00"
//        },
//        {
//        "id": "6511875a-c70a-11ed-afa1-0242ac120002",
//        "type": "All Airlines Debit",
//        "meetingTime": "2023-03-15T18:45:00+03:00",
//        "addressId": "f2941ac0-d510-11ed-afa1-0242ac120002",
//        "clientId": "a0af1e4c-c6f8-11ed-afa1-0242ac120002",
//        "creationTime": "2023-03-14T09:00:00.812+03:00"
//        },
//        {
//        "id": "6e313fe2-c70a-11ed-afa1-0242ac120002",
//        "type": "Drive Credit",
//        "meetingTime": "2023-03-14T11:00:00+03:00",
//        "addressId": "e41362a9-eabd-4875-af71-71c3e43c5cd6",
//        "clientId": "dc86186e-c6e7-11ed-afa1-0242ac120002",
//        "creationTime": "2023-03-14T05:00:00.555+03:00"
//        },
//        {
//        "id": "75e12be5-9fcd-4853-a0dc-4e32f8cb2eac",
//        "type": "Junior Debit",
//        "meetingTime": "2023-03-15T18:45:00+03:00",
//        "addressId": "eb612fb8-d510-11ed-afa1-0242ac120002",
//        "clientId": "a0af1e4c-c6f8-11ed-afa1-0242ac120002",
//        "creationTime": "2023-03-14T09:00:00.654+03:00"
//        }
//        ]
//        }
//        –í—ã—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
//
//        {
//        "meetings": [
//        {
//        "meetingTime": "2023-03-14T11:00:00+03:00",
//        "clientId": "dc86186e-c6e7-11ed-afa1-0242ac120002",
//        "addressId": "e41362a9-eabd-4875-af71-71c3e43c5cd6",
//        "products": [
//        {
//        "creationTime": "2023-03-14T05:00:00.555+03:00",
//        "id": "6e313fe2-c70a-11ed-afa1-0242ac120002",
//        "type": "Drive Credit"
//        },
//        {
//        "creationTime": "2023-03-14T10:00:00.145+03:00",
//        "id": "5d538f86-c70a-11ed-afa1-0242ac120002",
//        "type": "Black Debit"
//        }
//        ]
//        },
//        {
//        "meetingTime": "2023-03-15T18:45:00+03:00",
//        "clientId": "a0af1e4c-c6f8-11ed-afa1-0242ac120002",
//        "addressId": "eb612fb8-d510-11ed-afa1-0242ac120002",
//        "products": [
//        {
//        "creationTime": "2023-03-14T09:00:00.654+03:00",
//        "id": "75e12be5-9fcd-4853-a0dc-4e32f8cb2eac",
//        "type": "Junior Debit"
//        }
//        ]
//        },
//        {
//        "meetingTime": "2023-03-15T18:45:00+03:00",
//        "clientId": "a0af1e4c-c6f8-11ed-afa1-0242ac120002",
//        "addressId": "f2941ac0-d510-11ed-afa1-0242ac120002",
//        "products": [
//        {
//        "creationTime": "2023-03-14T09:00:00.812+03:00",
//        "id": "6511875a-c70a-11ed-afa1-0242ac120002",
//        "type": "All Airlines Debit"
//        }
//        ]
//        }
//        ]
//        }
//        –ö–ª–∏–µ–Ω—Ç —Å clientId dc86186e-c6e7-11ed-afa1-0242ac120002 –∑–∞–∫–∞–∑–∞–ª –∫–∞—Ä—Ç—É Drive Credit –¥–ª—è —Å–µ–±—è, –∞ –ø–æ—Ç–æ–º –µ—â–µ –∏ –∫–∞—Ä—Ç—É Black Debit –¥–ª—è –∂–µ–Ω—ã. –û–±–µ –∫–∞—Ä—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –≤—ã–¥–∞—á–µ. –û–±–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –æ–¥–Ω—É –≤—Å—Ç—Ä–µ—á—É, —Ç. –∫. –µ–¥—É—Ç –∫ –æ–¥–Ω–æ–º—É –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ –æ–¥–∏–Ω –∞–¥—Ä–µ—Å. –ü—Ä–æ–¥—É–∫—Ç—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–∞–Ω–Ω–æ–π –≤—Å—Ç—Ä–µ—á–µ. –í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ –≤—ã–±—Ä–∞–Ω–æ –±–ª–∏–∂–∞–π—à–µ–µ —Å—Ä–µ–¥–∏ meetingTime –¥–≤—É—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤;
//        –ö–ª–∏–µ–Ω—Ç —Å clientId a0af1e4c-c6f8-11ed-afa1-0242ac120002 –∑–∞–∫–∞–∑–∞–ª –∫–∞—Ä—Ç—É Junior Debit —Å–µ–±–µ –ø–æ –∞–¥—Ä–µ—Å—É 6511875a-c70a-11ed-afa1-0242ac120002, –∞ –ø–æ—Ç–æ–º –µ—â–µ –∏ –∫–∞—Ä—Ç—É Junior Debit –¥–ª—è —Å—ã–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É eb612fb8-d510-11ed-afa1-0242ac120002. –û–±–µ –∫–∞—Ä—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –≤—ã–¥–∞—á–µ. –ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ä–∞–∑–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏, —Ç.–∫. –µ–¥—É—Ç –ø–æ —Ä–∞–∑–Ω—ã–º –∞–¥—Ä–µ—Å–∞–º. –¢–∞–∫ –∫–∞–∫ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ –∏ clientId —É –¥–∞–Ω–Ω—ã—Ö –¥–≤—É—Ö –≤—Å—Ç—Ä–µ—á –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, —Ç–æ —Ä–µ—à–∞—é—â–∏–º –≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–µ addressId - –≤—Å—Ç—Ä–µ—á–∞ —Å –∞–¥—Ä–µ—Å–æ–º eb612fb8-d510-11ed-afa1-0242ac120002 –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–µ–µ –≤—Å—Ç—Ä–µ—á–∏ —Å –∞–¥—Ä–µ—Å–æ–º f2941ac0-d510-11ed-afa1-0242ac120002.—Ñ
//
//
//class PriorityDelivery
//{
//    public static void main(String args[])
//    {
//        Scanner scanner = new Scanner(System.in);
//        String json = scanner.nextLine(); // {"products": [...]}
//        //
//        // products -> meetings processing
//        //
//        System.out.println("result here"); // {"meetings": [...]}
//    }
//}
